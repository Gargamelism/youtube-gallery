services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - youtube_gallery_network

  # Django Backend Tests
  backend_test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test
    working_dir: /app
    profiles: ['test']
    environment:
      - TESTING=1
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=youtube_gallery.settings
      - YOUTUBE_CREDENTIALS_DIR=/app/config/credentials
      - YOUTUBE_CLIENT_SECRET_FILE=client_secret.json
      - YOUTUBE_TOKEN_FILE=token.json
    volumes:
      - ./backend:/app
      - youtube_credentials:/app/config/credentials
    # Exit after running tests
    command: python -m pytest -v
    # Don't restart
    restart: 'no'

  # Django Backend (Development with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - YOUTUBE_CREDENTIALS_DIR=/app/config/credentials
      - YOUTUBE_CLIENT_SECRET_FILE=client_secret.json
      - YOUTUBE_TOKEN_FILE=token.json
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
    ports:
      - '8000:8000'
      - '5678:5678' # debugpy port for VS Code debugging
    depends_on:
      - db
    networks:
      - youtube_gallery_network
    command: >
      sh -c "/usr/local/bin/python manage.py makemigrations videos &&
             /usr/local/bin/python manage.py migrate &&
             /usr/local/bin/python manage.py collectstatic --noinput &&
             /usr/local/bin/python -m debugpy --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000 --noreload"
    # Note: Add --wait-for-client after debugpy if you need to debug Django startup code
    stdin_open: true
    tty: true

  # Next.js Frontend (Development with hot reload)
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - BE_PUBLIC_API_URL=http://localhost:8000/api
      - WATCHPACK_POLLING=true
    command: npm run dev
    depends_on:
      - backend
    networks:
      - youtube_gallery_network

volumes:
  postgres_data:
    driver: local

networks:
  youtube_gallery_network:
    driver: bridge
